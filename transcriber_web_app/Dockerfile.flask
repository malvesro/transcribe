# Base image
FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Install system dependencies, Docker CLI
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release && \
    # Add Docker's official GPG key
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    # Set up the Docker stable repository
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    # Install Docker CLI (docker-compose-plugin removido, pois usaremos a SDK Python)
    apt-get update && \
    apt-get install -y --no-install-recommends \
    docker-ce-cli && \
    # Clean up
    rm -rf /var/lib/apt/lists/*

# Copy requirements first to leverage Docker cache
COPY requirements.txt .

# Install Python dependencies (incluindo a biblioteca 'docker')
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY . .

# Expose port
EXPOSE 5000

# Command to run the application
CMD ["python", "-m", "flask", "run", "--host=0.0.0.0"]
